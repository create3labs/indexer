apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
        kompose.service.expose: "True"
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: node
      name: node
    spec:
      ports:
        - name: "80"
          port: 80
          targetPort: 80
      selector:
        io.kompose.service: node
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
        kompose.service.type: clusterip
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: pgadmin
      name: pgadmin
    spec:
      ports:
        - name: "5050"
          port: 5050
          targetPort: 80
      selector:
        io.kompose.service: pgadmin
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
        kompose.service.type: clusterip
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
      name: postgres
    spec:
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        io.kompose.service: postgres
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
        kompose.service.type: clusterip
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      ports:
        - name: "6379"
          port: 6379
          targetPort: 6379
      selector:
        io.kompose.service: redis
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
        kompose.service.expose: "True"
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: node
      name: node
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: node
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
            kompose.service.expose: "True"
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.network/indexer-service-net: "true"
            io.kompose.service: node
        spec:
          containers:
            - args:
                - npm
                - run
                - start
              env:
                - name: ADMIN_API_KEY
                  value: 792f3f4f-0c72-4333-855f-a2ff7096f1db
                - name: BASE_NETWORK_HTTP_URL
                  value: ' https://data-seed-prebsc-2-s3.binance.org:8545/'
                - name: BASE_NETWORK_WS_URL
                  value: ' wss://data-seed-prebsc-2-s3.binance.org:8545/'
                - name: CATCHUP
                  value: "1"
                - name: CHAIN_ID
                  value: "97"
                - name: DATABASE_URL
                  value: postgresql://postgres:password@postgres:5432/postgres?schema=public
                - name: DISABLE_ORDERS
                  value: "0"
                - name: DO_BACKGROUND_WORK
                  value: "1"
                - name: LOCAL_MODE
                  value: "true"
                - name: MASTER
                  value: "1"
                - name: METADATA_API_BASE_URL
                  value: x
                - name: METADATA_INDEXING_METHOD
                  value: contract
                - name: PORT
                  value: "3000"
                - name: REDIS_URL
                  value: redis://redis:password@redis:6379
                - name: ROUTER
                  value: 0x5964fe9b31c332768f6c9037951c60ae871cf44b
                - name: SEAPORT_CONDUIT_CONTROLLER
                  value: 0x00000000F9490004C11Cef243f5400493c00Ad63
                - name: SEAPORT_EXCHANGE
                  value: 0x00000000006c3852cbEf3e08E8dF289169EdE581
                - name: USDC
                  value: 0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d
                - name: VERSION
                  value: v5
                - name: WRAPPED_NATIVE
                  value: 0x565a596a6c3fd3cfa8a55bbda1fb7fd989128593
              image: '/node:'
              name: node
              ports:
                - containerPort: 80
              resources: {}
              workingDir: /indexer
          restartPolicy: Always
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
        kompose.service.expose: "True"
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: node
      name: node
    spec:
      rules:
        - http:
            paths:
              - backend:
                  service:
                    name: node
                    port:
                      number: 80
                path: /
                pathType: Prefix
    status:
      loadBalancer: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: indexer-service-net
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/indexer-service-net: "true"
      podSelector:
        matchLabels:
          io.kompose.network/indexer-service-net: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
        kompose.service.type: clusterip
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: pgadmin
      name: pgadmin
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: pgadmin
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
            kompose.service.type: clusterip
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.network/indexer-local: "true"
            io.kompose.network/indexer-service-net: "true"
            io.kompose.service: pgadmin
        spec:
          containers:
            - env:
                - name: PGADMIN_CONFIG_SERVER_MODE
                  value: "False"
                - name: PGADMIN_DEFAULT_EMAIL
                  value: pgadmin4@pgadmin.org
                - name: PGADMIN_DEFAULT_PASSWORD
                  value: admin
              image: dpage/pgadmin4
              name: pgadmin-container
              ports:
                - containerPort: 80
              resources: {}
              tty: true
          restartPolicy: Always
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: indexer-local
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/indexer-local: "true"
      podSelector:
        matchLabels:
          io.kompose.network/indexer-local: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
        kompose.service.type: clusterip
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
      name: postgres
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: postgres
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
            kompose.service.type: clusterip
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.network/indexer-local: "true"
            io.kompose.network/indexer-service-net: "true"
            io.kompose.service: postgres
        spec:
          containers:
            - env:
                - name: POSTGRES_PASSWORD
                  value: password
                - name: POSTGRES_USER
                  value: postgres
              image: postgres:13.2
              name: postgres
              ports:
                - containerPort: 5432
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
        kompose.service.type: clusterip
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: redis
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose.plus-node.yaml --out deployment.yml
            kompose.service.type: clusterip
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.network/indexer-local: "true"
            io.kompose.network/indexer-service-net: "true"
            io.kompose.service: redis
        spec:
          containers:
            - args:
                - sh
                - -c
                - redis-server --requirepass password
              image: redis:6.2.2
              name: redis
              ports:
                - containerPort: 6379
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

