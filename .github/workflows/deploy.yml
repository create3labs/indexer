name: Deploy

on:
  push:
    branches:
      - v5-deploy

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        name: Set up Node.js
        with:
          node-version: 16
      - run: yarn
      - run: |
          touch .env
          echo "VERSION=v5" >> .env
          echo "PORT=80" >> .env
          echo "CHAIN_ID=45000" >> .env
          # todo / extract to .env
          echo "ADMIN_API_KEY=${{ secrets.ADMIN_API_KEY }}" >> .env
          echo "BASE_NETWORK_HTTP_URL=https://autobahn-rpc.rocknitive.com" >> .env
          echo "BASE_NETWORK_WS_URL=wss://autobahn-rpc.com:4443" >> .env
          echo "DATABASE_URL=postgresql://postgres:password@postgres:5432/postgres?schema=public" >> .env
          echo "REDIS_URL=redis://redis:password@redis:6379" >> .env
          echo "CATCHUP=1" >> .env
          echo "MASTER=1" >> .env
          echo "DO_BACKGROUND_WORK=1" >> .env
          echo "DO_EVENTS_SYNC_BACKFILL=1" >> .env
          echo "DISABLE_ORDERS=0" >> .env
          echo "METADATA_INDEXING_METHOD=contract" >> .env
          echo "WRAPPED_NATIVE=0xFf85bD59873D6C14522c0D840cfE90AF57f50103" >> .env
          echo "USDC=0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83" >> .env
          echo "ROUTER=0x341527adfC7593FEA0d876E38a89687D728BC3ae" >> .env
          echo "SEAPORT_EXCHANGE=0x00000000006c3852cbEf3e08E8dF289169EdE581" >> .env
          echo "SEAPORT_CONDUIT_CONTROLLER=0x00000000F9490004C11Cef243f5400493c00Ad63" >> .env
          echo "METADATA_API_BASE_URL=x" >> .env
          echo "WL_ADDRESS=" >> .env
      - run: yarn run build
      - name: Install kompose
        run: |
          curl -L https://github.com/kubernetes/kompose/releases/download/v1.26.1/kompose-linux-amd64 -o kompose
          chmod +x kompose
          ls -lah
          pwd
      - name: Set tag env
        run: echo "TAG=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV
      - name: Set registry env
        run: echo "REGISTRY=${{ secrets.DIGITALOCEAN_REGISTRY }}" >> $GITHUB_ENV
      - name: Build image(s)
        run: docker compose -f docker-compose.kubernetes.yaml build
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 1200
      - name: Push image to DO Container Registry
        run: docker compose -f docker-compose.kubernetes.yaml push
      # Kubernetes related stuff
      - name: Create deployment files
        run: |
          pwd
          ls -lah
          ./kompose convert --file docker-compose.kubernetes.yaml --out deployment.yml
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.DIGITALOCEAN_CLUSTER_NAME }}
      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/deployment.yml
      - name: Verify deployment
        # Checking redis as example deployment, todo check others
        run: kubectl rollout status deployment/redis
